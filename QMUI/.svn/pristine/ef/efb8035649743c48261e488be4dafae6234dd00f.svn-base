//
//  QMUIStaticTableViewCellData.h
//  qmui
//
//  Created by MoLice on 15/5/3.
//  Copyright (c) 2015年 QMUI Team. All rights reserved.
//

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

@class QMUITableViewCell;

typedef NS_ENUM(NSInteger, QMUIStaticTableViewCellAccessoryType) {
    QMUIStaticTableViewCellAccessoryTypeNone,
    QMUIStaticTableViewCellAccessoryTypeDisclosureIndicator,
    QMUIStaticTableViewCellAccessoryTypeDetailDisclosureButton,
    QMUIStaticTableViewCellAccessoryTypeCheckmark,
    QMUIStaticTableViewCellAccessoryTypeDetailButton,
    QMUIStaticTableViewCellAccessoryTypeSwitch,
};

/**
 *  一个 cellData 对象用于存储 static tableView（例如设置界面那种列表） 列表里的一行 cell 的基本信息，包括这个 cell 的 class、text、detailText、accessoryView 等。
 *  @see QMUIStaticTableViewCellDataSource
 */
@interface QMUIStaticTableViewCellData : NSObject

/// 当前 cellData 的标志，一般同个 tableView 里的每个 cellData 都会拥有不相同的 identifier
@property(nonatomic, assign) NSInteger identifier;

/// 当前 cellData 所对应的 indexPath
@property(nonatomic, strong, readonly) NSIndexPath *indexPath;

/// init cell 时要使用的 style
@property(nonatomic, assign) UITableViewCellStyle style;

/// cell 左边要显示的图片，将会被设置到 cell.imageView.image
@property(nonatomic, strong) UIImage *image;

/// cell 的文字，将会被设置到 cell.textLabel.text
@property(nonatomic, copy) NSString *text;

/// cell 的详细文字，将会被设置到 cell.detailTextLabel.text，所以要求 cellData.style 的值必须是带 detailTextLabel 类型的 style
@property(nonatomic, copy) NSString *detailText;

/// cell 右边的 accessoryView 的类型
@property(nonatomic, assign) QMUIStaticTableViewCellAccessoryType accessoryType;

/// 配合 cellData.accessoryType 使用，不同的 accessoryType 需要配合不同类型的 accessoryValueObject 使用。例如如果 accessoryType = QMUIStaticTableViewCellAccessoryTypeSwitch，则 accessoryValueObject 必须传一个 @YES 或 @NO 用于控制 UISwitch.on 属性。
/// @warning 目前也仅支持与 QMUIStaticTableViewCellAccessoryTypeSwitch 搭配使用。
@property(nonatomic, strong) NSObject *accessoryValueObject;

/// 当 cell 的点击事件（或 accessoryView 的事件）被触发时，要由哪个对象来接收
@property(nonatomic, assign) id actionTarget;

/// 当 cell 的点击事件（或 accessoryView 的事件）被触发时，要向 actionTarget 指针发送什么消息以响应事件
/// @warning 一般情况下作为 action 的 selector 接收一个参数，这个参数也即当前的 QMUIStaticTableViewCellData 对象。特殊地，对 QMUIStaticTableViewCellAccessoryTypeSwitch 类型的 selector 第一个参数传的是 UISwitch 对象。
@property(nonatomic, assign) SEL action;

+ (instancetype)staticTableViewCellDataWithIdentifier:(NSInteger)identifier
                                                image:(UIImage *)image
                                                 text:(NSString *)text
                                           detailText:(NSString *)detailText
                                        accessoryType:(QMUIStaticTableViewCellAccessoryType)accessoryType
                                               target:(id)target
                                               action:(SEL)action;

+ (instancetype)staticTableViewCellDataWithIdentifier:(NSInteger)identifier
                                                style:(UITableViewCellStyle)style
                                                image:(UIImage *)image
                                                 text:(NSString *)text
                                           detailText:(NSString *)detailText
                                        accessoryType:(QMUIStaticTableViewCellAccessoryType)accessoryType
                                 accessoryValueObject:(NSObject *)accessoryValueObject
                                               target:(id)target
                                               action:(SEL)action;

+ (UITableViewCellAccessoryType)tableViewCellAccessoryTypeWithStaticAccessoryType:(QMUIStaticTableViewCellAccessoryType)type;
@end
